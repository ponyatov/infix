%{
#include "hpp.hpp"
string LexString;
%}
%option noyywrap yylineno
S [\+\-]?
N [0-9]+
%x lexstring
%%
#[^\n]*				{}				/* comment		*/

'					{BEGIN(lexstring); LexString="";}	/* strings */
<lexstring>'		{BEGIN(INITIAL); yylval.o=new Str(LexString); return STR;}
<lexstring>.		{LexString+=yytext[0];}
<lexstring>\\.		{LexString+=yytext[1];}

{N}[eE]{S}{N}		TOC(Num,NUM)	/* numbers		*/
{N}\.{N}			TOC(Num,NUM)
{N}					TOC(Int,NUM)
0x[0-9A-Fa-f]+		TOC(Hex,NUM)
0b[01]+				TOC(Bin,NUM)

\(					TOC(Op,LP)		/* brackets		*/
\)					TOC(Op,RP)
\[					TOC(Op,LQ)
\]					TOC(Op,RQ)

\+					TOC(Op,ADD)		/* operators	*/
\-					TOC(Op,SUB)
\*					TOC(Op,MUL)
\/					TOC(Op,DIV)
\^					TOC(Op,POW)

\=					TOC(Op,EQ)
\@					TOC(Op,AT)
\~					TOC(Op,TILD)

[a-zA-Z0-9_.]+		TOC(Sym,SYM)	/* symbol		*/
[ \t\r\n]+			{}				/* drop spaces	*/
%%
